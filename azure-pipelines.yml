stages:
  - stage: 'check_version'
    displayName: 'Check Version'
    jobs:
      - job: 'ubuntu_1804'
        displayName: 'ubuntu-18.04'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: Bash@3
            displayName: 'Check Version'
            inputs:
              failOnStderr: true
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                cat /etc/os-release
                if [ -x "$(command -v az)" ]; then
                  which az
                  az version
                else
                  echo 'az not found'
                fi
                if [ -x "$(command -v kubectl)" ]; then
                  which kubectl
                  kubectl version --client=true
                else
                  echo 'kubectl not found'
                fi
                if [ -x "$(command -v helm)" ]; then
                  which helm
                  helm version
                else
                  echo 'helm not found'
                fi
                if [ -x "$(command -v terraform)" ]; then
                  which terraform
                  terraform version
                else
                  echo 'terraform not found'
                fi
                if [ -x "$(command -v azcopy)" ]; then
                  which azcopy
                  if azcopy --version; then :; fi
                else
                  echo 'azcopy not found'
                fi
      - job: 'ubuntu_1604'
        displayName: 'ubuntu-16.04'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Bash@3
            displayName: 'Check Version'
            inputs:
              failOnStderr: true
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                cat /etc/os-release
                if [ -x "$(command -v az)" ]; then
                  which az
                  az version
                else
                  echo 'az not found'
                fi
                if [ -x "$(command -v kubectl)" ]; then
                  which kubectl
                  kubectl version --client=true
                else
                  echo 'kubectl not found'
                fi
                if [ -x "$(command -v helm)" ]; then
                  which helm
                  helm version
                else
                  echo 'helm not found'
                fi
                if [ -x "$(command -v terraform)" ]; then
                  which terraform
                  terraform version
                else
                  echo 'terraform not found'
                fi
                if [ -x "$(command -v azcopy)" ]; then
                  which azcopy
                  if azcopy --version; then :; fi
                else
                  echo 'azcopy not found'
                fi