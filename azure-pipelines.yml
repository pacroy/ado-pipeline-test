stages:
  - stage: 'check_default_version'
    displayName: 'Check Default Version'
    jobs:
      - job: 'ubuntu_1804'
        displayName: 'ubuntu-18.04'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - checkout: none
          - task: Bash@3
            displayName: 'Check Version'
            inputs:
              failOnStderr: false
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                echo '========== User Information =========='
                who
                echo '========== Environment Variables =========='
                printenv
                echo '========== OS Information =========='
                cat /etc/os-release
                echo '========== Tool Version =========='
                if [ -x "$(command -v az)" ]; then
                  which az
                  az version
                else
                  echo 'az not found'
                fi
                if [ -x "$(command -v kubectl)" ]; then
                  which kubectl
                  kubectl version --client=true
                else
                  echo 'kubectl not found'
                fi
                if [ -x "$(command -v helm)" ]; then
                  which helm
                  helm version
                else
                  echo 'helm not found'
                fi
                if [ -x "$(command -v terraform)" ]; then
                  which terraform
                  terraform version
                else
                  echo 'terraform not found'
                fi
                if [ -x "$(command -v azcopy)" ]; then
                  which azcopy
                  azcopy --version
                else
                  echo 'azcopy not found'
                fi
                if [ -x "$(command -v aws)" ]; then
                  which aws
                  aws --version
                else
                  echo 'aws not found'
                fi
      - job: 'ubuntu_1604'
        displayName: 'ubuntu-16.04'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - checkout: none
          - task: Bash@3
            displayName: 'Check Version'
            inputs:
              failOnStderr: false
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                echo '========== User Information =========='
                who
                echo '========== Environment Variables =========='
                printenv
                echo '========== OS Information =========='
                cat /etc/os-release
                echo '========== Tool Version =========='
                if [ -x "$(command -v az)" ]; then
                  which az
                  az version
                else
                  echo 'az not found'
                fi
                if [ -x "$(command -v kubectl)" ]; then
                  which kubectl
                  kubectl version --client=true
                else
                  echo 'kubectl not found'
                fi
                if [ -x "$(command -v helm)" ]; then
                  which helm
                  helm version
                else
                  echo 'helm not found'
                fi
                if [ -x "$(command -v terraform)" ]; then
                  which terraform
                  terraform version
                else
                  echo 'terraform not found'
                fi
                if [ -x "$(command -v azcopy)" ]; then
                  which azcopy
                  azcopy --version
                else
                  echo 'azcopy not found'
                fi
                if [ -x "$(command -v aws)" ]; then
                  which aws
                  aws --version
                else
                  echo 'aws not found'
                fi
  - stage: 'install_tools'
    displayName: 'Install Tools'
    jobs:
      - job: 'install_tools'
        displayName: 'Install Tools'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - checkout: none
          - task: Bash@3
            displayName: 'Install Terraform'
            inputs:
              failOnStderr: true
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                curl -sL https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip -o terraform.zip
                unzip terraform.zip
                mv terraform $(Agent.ToolsDirectory)
          - task: Bash@3
            displayName: 'Install Helm'
            inputs:
              failOnStderr: true
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                curl -sL https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz -o helm.tgz
                tar -xvzf helm.tgz
                mv linux-amd64/helm $(Agent.ToolsDirectory)
          - task: Bash@3
            displayName: 'Check Version'
            inputs:
              failOnStderr: false
              noProfile: true
              noRc: true
              targetType: 'inline'
              script: |
                PATH=$(Agent.ToolsDirectory):$PATH
                if [ -x "$(command -v terraform)" ]; then
                  which terraform
                  terraform version
                else
                  echo 'terraform not found'
                fi
                if [ -x "$(command -v helm)" ]; then
                  which helm
                  helm version
                else
                  echo 'helm not found'
                fi
